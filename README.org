
* autoftp - automated WLAN file aggregator using NcFTP
Written by Martin Kennedy - Feb 2018 - revised May 2018

Setup:

1) Shell into the router and run some commands.
   
   #+BEGIN_SRC sh
   opkg update
   opkg install git
   git clone https://github.com/hurricos/autoftpd autoftpd
   #+END_SRC

   /Note: Alternatively, if you don't want =git= on your system (as of June 2018, it's 700KB), you can move it manually to =~/autoftpd/=./

2) Configure =autoftp.defaults.conf=. In particular:
   1) Ensure the =FTP_HOST_NR= is correct; this is the host number in the subnet at which the FTP server is to be located.
   2) Remember to create and set a file to store the files that get automatically pulled down. This is, by default, =/mnt/sda1/files=, so run =ls /mnt= to find the automatic mount point, then =mkdir /mnt/<MOUNT_POINT>/files/=, and change =FS_DIR= in =autoftp.defaults.conf= to =/mnt/<MOUNT_POINT>=.
   
3) Install by running

   #+BEGIN_SRC sh
   cd autoftpd && ./install.sh
   #+END_SRC

4) Insert USB flash drive with compatable, mountable filesystem (EXT2/3/4, FAT, NTFS all work.)

5) By default, =autoftpd= expects that the sink (push) FTP server requires authentication, but not the source (pull) FTP server(s). This is reflected in =autoftp.defaults.conf=. Before attempting to use =autoftpd=, please create a file that looks like [[sample_login.cfg]], fill in the required credentials and place it either at the default location (=/etc/autoftp/login.cfg=), or wherever you like (making sure to set =PUSH_LOGIN_FILE= to match). If you want to add login requirements to the source FTP servers, set =PULL_REQ_AUTH= to =TRUE=, and provide a location for a login file.

6) Ensure router automatically connects to SSID of desired routers - passwords do not need to be the same, but it makes things easier to configure. This can / should all be done through LuCI.

Notes:
1) LEDs are DISABLED BY DEFAULT, since the target appliance is not necessarily known. You can certainly browse [[https://openwrt.org/docs/guide-user/base-system/led_configuration][OpenWRT.org's LED configuration guide]], install the required kernel modules through =opkg= and override =led_mode ()= in =autoftp.defaults.conf=, but as of yet no effort has been made to implement hardware checking / adaptation, since I only have the gl-AR300M.
2) The files on different local networks don't need to be unique, since they are saved under a directory named after the source LAN IP of the FTP server.
3) To avoid overwriting files after connecting twice to the same FTP source (something that would happen if the wireless connection broke and was re-established), a flag is set each time a DHCP address is assigned; all flags are deleted when files are flushed at the FTP sink. That said, from a design standpoint, it may be preferable that the files be configured to be continuously concatenable - that is to say, if a file is downloaded and removed at any point from an FTP source, its replacement can be directly concatenated to the end of that file to express a valid larger file correctly containing the data of both. Most data formats can handle this, but as we are not assuming formats, this isn't currently implemented.
4) Non-UNIX based FTP servers may not work to pull from, unfortunately. To push to, a DOS-based FTP server is (probably) fine, but I've yet to test. (The problem is when using ASCII mode, as UNIX and DOS pick different line terminators; this problem is peculiar to NcFTP, so a different FTP manager would work.)
5) Please make sure the router can run reliably on power supply granted; 5V @ 0.5A seems OK for the gl-AR300M.

* TODO Build installation package
SCHEDULED: <2018-06-01 Fri 14:00>--<2018-06-01 Fri 17:00>

- [X] Reset router to defaluts 

- [X] Setup github repository for autoftp

** TODO Setup test environment

- [X] Install vsFTPd on laptop

- [X] Setup laptop vsftpd to accept anonymous configuration

- [X] Setup pi vsftpd to accept from configuration in [[file:autoftp/login.cfg][login.cfg]]

- [X] Test out both vsftpd's from command-line NcFTP

- [ ] Connect laptop to Linksys

- [ ] Setup Linksys with identical pass / BSSID, but with particular subnets satisfying req's.

** TODO Create installation script

- [X] Add default installs to scripts

- [X] Add source files to script

- [ ] Change IP addresses required to those mangled

** TODO Test configuration script

- [ ] Connect laptop to Linksys in corner

- [ ] Connect Pi to base station

- [ ] Connect and verify association of glAR

- [ ] Grab the FTP files, then attempt to move it by cutting power to Linksys

** TODO Finalize

- [ ] Setup laptop to take configuration from [[file:autoftp/login.cfg][login.cfg]]

- [ ] Change script to accept regexes for the assigned IP, and a sed script to transform them

- [ ] Simplify LED blinking

- [ ] Reset glAR and test

